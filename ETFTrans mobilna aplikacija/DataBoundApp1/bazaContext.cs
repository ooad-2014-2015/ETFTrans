#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataBoundApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
using System.IO;
using System.IO.IsolatedStorage;
using Microsoft.Phone.Data.Linq.Mapping;
using Microsoft.Phone.Data.Linq;


public class DebugWriter : TextWriter
{
    private const int DefaultBufferSize = 256;
    private System.Text.StringBuilder _buffer;

    public DebugWriter()
    {
        BufferSize = 256;
        _buffer = new System.Text.StringBuilder(BufferSize);
    }

    public int BufferSize
    {
        get;
        private set;
    }

    public override System.Text.Encoding Encoding
    {
        get { return System.Text.Encoding.UTF8; }
    }

    #region StreamWriter Overrides
    public override void Write(char value)
    {
        _buffer.Append(value);
        if (_buffer.Length >= BufferSize)
            Flush();
    }

    public override void WriteLine(string value)
    {
        Flush();

        using(var reader = new StringReader(value))
        {
            string line; 
            while( null != (line = reader.ReadLine()))
                System.Diagnostics.Debug.WriteLine(line);
        }
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
            Flush();
    }

    public override void Flush()
    {
        if (_buffer.Length > 0)
        {
            System.Diagnostics.Debug.WriteLine(_buffer);
            _buffer.Clear();
        }
    }
    #endregion
}


	public partial class bazaContext : System.Data.Linq.DataContext
	{
		
		public bool CreateIfNotExists()
		{
			bool created = false;
			if (!this.DatabaseExists())
			{
				string[] names = this.GetType().Assembly.GetManifestResourceNames();
				string name = names.Where(n => n.EndsWith(FileName)).FirstOrDefault();
				if (name != null)
				{
					using (Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name))
					{
						if (resourceStream != null)
						{
							using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())
							{
								using (IsolatedStorageFileStream fileStream = new IsolatedStorageFileStream(FileName, FileMode.Create, myIsolatedStorage))
								{
									using (BinaryWriter writer = new BinaryWriter(fileStream))
									{
										long length = resourceStream.Length;
										byte[] buffer = new byte[32];
										int readCount = 0;
										using (BinaryReader reader = new BinaryReader(resourceStream))
										{
											// read file in chunks in order to reduce memory consumption and increase performance
											while (readCount < length)
											{
												int actual = reader.Read(buffer, 0, buffer.Length);
												readCount += actual;
												writer.Write(buffer, 0, actual);
											}
										}
									}
								}
							}
							created = true;
						}
						else
						{
							this.CreateDatabase();
							created = true;
						}
					}
				}
				else
				{
					this.CreateDatabase();
					created = true;
				}
			}
			return created;
		}
		
		public bool LogDebug
		{
			set
			{
				if (value)
				{
					this.Log = new DebugWriter();
				}
			}
		}
		
		public static string ConnectionString = "Data Source=isostore:/baza.sdf";

		public static string ConnectionStringReadOnly = "Data Source=appdata:/baza.sdf;File Mode=Read Only;";

		public static string FileName = "baza.sdf";

		public bazaContext(string connectionString) : base(connectionString)
		{
			OnCreated();
		}
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBazaTest(BazaTest instance);
    partial void UpdateBazaTest(BazaTest instance);
    partial void DeleteBazaTest(BazaTest instance);
    partial void InsertDaniVoznjeLinije(DaniVoznjeLinije instance);
    partial void UpdateDaniVoznjeLinije(DaniVoznjeLinije instance);
    partial void DeleteDaniVoznjeLinije(DaniVoznjeLinije instance);
    partial void InsertLinije(Linije instance);
    partial void UpdateLinije(Linije instance);
    partial void DeleteLinije(Linije instance);
    partial void InsertStanica(Stanica instance);
    partial void UpdateStanica(Stanica instance);
    partial void DeleteStanica(Stanica instance);
    partial void InsertStanicaLinija(StanicaLinija instance);
    partial void UpdateStanicaLinija(StanicaLinija instance);
    partial void DeleteStanicaLinija(StanicaLinija instance);
    #endregion
		
		public System.Data.Linq.Table<BazaTest> BazaTest
		{
			get
			{
				return this.GetTable<BazaTest>();
			}
		}
		
		public System.Data.Linq.Table<DaniVoznjeLinije> DaniVoznjeLinije
		{
			get
			{
				return this.GetTable<DaniVoznjeLinije>();
			}
		}
		
		public System.Data.Linq.Table<Linije> Linije
		{
			get
			{
				return this.GetTable<Linije>();
			}
		}
		
		public System.Data.Linq.Table<Stanica> Stanica
		{
			get
			{
				return this.GetTable<Stanica>();
			}
		}
		
		public System.Data.Linq.Table<StanicaLinija> StanicaLinija
		{
			get
			{
				return this.GetTable<StanicaLinija>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="bazaTest")]
	public partial class BazaTest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    #endregion
		
		public BazaTest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ime", Storage="_Ime", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DaniVoznjeLinije : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdLinije;
		
		private int _Pon;
		
		private int _Uto;
		
		private int _Sri;
		
		private int _Cet;
		
		private int _Pet;
		
		private int _Sub;
		
		private int _Ned;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdLinijeChanging(int value);
    partial void OnIdLinijeChanged();
    partial void OnPonChanging(int value);
    partial void OnPonChanged();
    partial void OnUtoChanging(int value);
    partial void OnUtoChanged();
    partial void OnSriChanging(int value);
    partial void OnSriChanged();
    partial void OnCetChanging(int value);
    partial void OnCetChanged();
    partial void OnPetChanging(int value);
    partial void OnPetChanged();
    partial void OnSubChanging(int value);
    partial void OnSubChanged();
    partial void OnNedChanging(int value);
    partial void OnNedChanged();
    #endregion
		
		public DaniVoznjeLinije()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLinije", DbType="Int NOT NULL")]
		public int IdLinije
		{
			get
			{
				return this._IdLinije;
			}
			set
			{
				if ((this._IdLinije != value))
				{
					this.OnIdLinijeChanging(value);
					this.SendPropertyChanging();
					this._IdLinije = value;
					this.SendPropertyChanged("IdLinije");
					this.OnIdLinijeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pon", Storage="_Pon", DbType="Int NOT NULL")]
		public int Pon
		{
			get
			{
				return this._Pon;
			}
			set
			{
				if ((this._Pon != value))
				{
					this.OnPonChanging(value);
					this.SendPropertyChanging();
					this._Pon = value;
					this.SendPropertyChanged("Pon");
					this.OnPonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="uto", Storage="_Uto", DbType="Int NOT NULL")]
		public int Uto
		{
			get
			{
				return this._Uto;
			}
			set
			{
				if ((this._Uto != value))
				{
					this.OnUtoChanging(value);
					this.SendPropertyChanging();
					this._Uto = value;
					this.SendPropertyChanged("Uto");
					this.OnUtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sri", Storage="_Sri", DbType="Int NOT NULL")]
		public int Sri
		{
			get
			{
				return this._Sri;
			}
			set
			{
				if ((this._Sri != value))
				{
					this.OnSriChanging(value);
					this.SendPropertyChanging();
					this._Sri = value;
					this.SendPropertyChanged("Sri");
					this.OnSriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cet", Storage="_Cet", DbType="Int NOT NULL")]
		public int Cet
		{
			get
			{
				return this._Cet;
			}
			set
			{
				if ((this._Cet != value))
				{
					this.OnCetChanging(value);
					this.SendPropertyChanging();
					this._Cet = value;
					this.SendPropertyChanged("Cet");
					this.OnCetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pet", Storage="_Pet", DbType="Int NOT NULL")]
		public int Pet
		{
			get
			{
				return this._Pet;
			}
			set
			{
				if ((this._Pet != value))
				{
					this.OnPetChanging(value);
					this.SendPropertyChanging();
					this._Pet = value;
					this.SendPropertyChanged("Pet");
					this.OnPetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sub", Storage="_Sub", DbType="Int NOT NULL")]
		public int Sub
		{
			get
			{
				return this._Sub;
			}
			set
			{
				if ((this._Sub != value))
				{
					this.OnSubChanging(value);
					this.SendPropertyChanging();
					this._Sub = value;
					this.SendPropertyChanged("Sub");
					this.OnSubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ned", Storage="_Ned", DbType="Int NOT NULL")]
		public int Ned
		{
			get
			{
				return this._Ned;
			}
			set
			{
				if ((this._Ned != value))
				{
					this.OnNedChanging(value);
					this.SendPropertyChanging();
					this._Ned = value;
					this.SendPropertyChanged("Ned");
					this.OnNedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Linije : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _VrijemePolaska;
		
		private System.DateTime _VrijemeDolaska;
		
		private double _CijenaZaOdrediste;
		
		private int _BrojSlobodnihMjesta;
		
		private int _BrojRaspolozivihMjesta;
		
		private string _Odrediste;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVrijemePolaskaChanging(System.DateTime value);
    partial void OnVrijemePolaskaChanged();
    partial void OnVrijemeDolaskaChanging(System.DateTime value);
    partial void OnVrijemeDolaskaChanged();
    partial void OnCijenaZaOdredisteChanging(double value);
    partial void OnCijenaZaOdredisteChanged();
    partial void OnBrojSlobodnihMjestaChanging(int value);
    partial void OnBrojSlobodnihMjestaChanged();
    partial void OnBrojRaspolozivihMjestaChanging(int value);
    partial void OnBrojRaspolozivihMjestaChanged();
    partial void OnOdredisteChanging(string value);
    partial void OnOdredisteChanged();
    #endregion
		
		public Linije()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vrijemePolaska", Storage="_VrijemePolaska", DbType="DateTime NOT NULL")]
		public System.DateTime VrijemePolaska
		{
			get
			{
				return this._VrijemePolaska;
			}
			set
			{
				if ((this._VrijemePolaska != value))
				{
					this.OnVrijemePolaskaChanging(value);
					this.SendPropertyChanging();
					this._VrijemePolaska = value;
					this.SendPropertyChanged("VrijemePolaska");
					this.OnVrijemePolaskaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vrijemeDolaska", Storage="_VrijemeDolaska", DbType="DateTime NOT NULL")]
		public System.DateTime VrijemeDolaska
		{
			get
			{
				return this._VrijemeDolaska;
			}
			set
			{
				if ((this._VrijemeDolaska != value))
				{
					this.OnVrijemeDolaskaChanging(value);
					this.SendPropertyChanging();
					this._VrijemeDolaska = value;
					this.SendPropertyChanged("VrijemeDolaska");
					this.OnVrijemeDolaskaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cijenaZaOdrediste", Storage="_CijenaZaOdrediste", DbType="Float NOT NULL")]
		public double CijenaZaOdrediste
		{
			get
			{
				return this._CijenaZaOdrediste;
			}
			set
			{
				if ((this._CijenaZaOdrediste != value))
				{
					this.OnCijenaZaOdredisteChanging(value);
					this.SendPropertyChanging();
					this._CijenaZaOdrediste = value;
					this.SendPropertyChanged("CijenaZaOdrediste");
					this.OnCijenaZaOdredisteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="brojSlobodnihMjesta", Storage="_BrojSlobodnihMjesta", DbType="Int NOT NULL")]
		public int BrojSlobodnihMjesta
		{
			get
			{
				return this._BrojSlobodnihMjesta;
			}
			set
			{
				if ((this._BrojSlobodnihMjesta != value))
				{
					this.OnBrojSlobodnihMjestaChanging(value);
					this.SendPropertyChanging();
					this._BrojSlobodnihMjesta = value;
					this.SendPropertyChanged("BrojSlobodnihMjesta");
					this.OnBrojSlobodnihMjestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="brojRaspolozivihMjesta", Storage="_BrojRaspolozivihMjesta", DbType="Int NOT NULL")]
		public int BrojRaspolozivihMjesta
		{
			get
			{
				return this._BrojRaspolozivihMjesta;
			}
			set
			{
				if ((this._BrojRaspolozivihMjesta != value))
				{
					this.OnBrojRaspolozivihMjestaChanging(value);
					this.SendPropertyChanging();
					this._BrojRaspolozivihMjesta = value;
					this.SendPropertyChanged("BrojRaspolozivihMjesta");
					this.OnBrojRaspolozivihMjestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Odrediste", DbType="NVarChar(25)")]
		public string Odrediste
		{
			get
			{
				return this._Odrediste;
			}
			set
			{
				if ((this._Odrediste != value))
				{
					this.OnOdredisteChanging(value);
					this.SendPropertyChanging();
					this._Odrediste = value;
					this.SendPropertyChanged("Odrediste");
					this.OnOdredisteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Stanica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ImeStanice;
		
		private double _Cijena;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImeStaniceChanging(string value);
    partial void OnImeStaniceChanged();
    partial void OnCijenaChanging(double value);
    partial void OnCijenaChanged();
    #endregion
		
		public Stanica()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImeStanice", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ImeStanice
		{
			get
			{
				return this._ImeStanice;
			}
			set
			{
				if ((this._ImeStanice != value))
				{
					this.OnImeStaniceChanging(value);
					this.SendPropertyChanging();
					this._ImeStanice = value;
					this.SendPropertyChanged("ImeStanice");
					this.OnImeStaniceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cijena", DbType="Float NOT NULL")]
		public double Cijena
		{
			get
			{
				return this._Cijena;
			}
			set
			{
				if ((this._Cijena != value))
				{
					this.OnCijenaChanging(value);
					this.SendPropertyChanging();
					this._Cijena = value;
					this.SendPropertyChanged("Cijena");
					this.OnCijenaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class StanicaLinija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdLinija;
		
		private int _IdStanica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdLinijaChanging(int value);
    partial void OnIdLinijaChanged();
    partial void OnIdStanicaChanging(int value);
    partial void OnIdStanicaChanged();
    #endregion
		
		public StanicaLinija()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLinija", DbType="Int NOT NULL")]
		public int IdLinija
		{
			get
			{
				return this._IdLinija;
			}
			set
			{
				if ((this._IdLinija != value))
				{
					this.OnIdLinijaChanging(value);
					this.SendPropertyChanging();
					this._IdLinija = value;
					this.SendPropertyChanged("IdLinija");
					this.OnIdLinijaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStanica", DbType="Int NOT NULL")]
		public int IdStanica
		{
			get
			{
				return this._IdStanica;
			}
			set
			{
				if ((this._IdStanica != value))
				{
					this.OnIdStanicaChanging(value);
					this.SendPropertyChanging();
					this._IdStanica = value;
					this.SendPropertyChanged("IdStanica");
					this.OnIdStanicaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
